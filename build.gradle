plugins {
	//noinspection GroovyAssignabilityCheck
    id 'fabric-loom' version '1.9-SNAPSHOT'
    //noinspection GroovyAssignabilityCheck
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"eggmeon" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
}

processResources {
	//noinspection GroovyAssignabilityCheck
    inputs.property "version", project.version

    //noinspection GroovyAssignabilityCheck
    filesMatching("fabric.mod.json") {
		//noinspection GroovyAssignabilityCheck
        expand "version": project.version
	}
}

//noinspection GroovyAssignabilityCheck
tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		//noinspection GroovyAssignabilityCheck
        create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {
	}
}